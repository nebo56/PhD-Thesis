df <- data.frame(drug1 = c("B:A", "B:D", "A:C"))
df
reads <- read.table("/home/nebo/eIF4A3/exon-classification-Zhen-3/eIF4E3_4A3_all-complete.bed-filtered100.bed-filtered100-selected-small-selected.bed",sep='\t')
df$drug2 <- lapply(strsplit(as.character(df$drug1), "\\+"), "[", 2)
reads <- read.table("/media/skgthab/storage/UCL/2015.08.05@eIF4A3-Ina/exon-classification-Zhen-2/eIF4E3_4A3_all-complete.bed-filtered100.bed-filtered100-selected-small-selected.bed",sep='\t')
reads <- read.table("/media/skgthab/storage/UCL/2015.08.05@eIF4A3-Ina/exon-classification-Zhen-2/eIF4E3_4A3_all-complete.bed-filtered100.bed-selected.bed",sep='\t')
reads$V4 <- 1
attach(reads)
reads$start <- V8 - V2  #all of them are on the plus strand and V9 you can use for read-end RNAmap
reads$end <- V9 - V2
detach(reads)
# get map of read end possitions for each exons
maps.end <- aggregate(V4 ~ end+V7+V2+V3, data=reads, FUN=sum) #we sum together normalized cDNA counts for each position
maps.end$junction <- paste(maps.end$V7, maps.end$V2, maps.end$V3, sep=':')
#colnames(maps.end)[2] <- "junction"
colnames(maps.end)[5] <- "end.peak"
maps.end <- maps.end[which(maps.end$end >= -25 & maps.end$end <= 20),]  #select end peaks in region -20 +20 from junction position
maps.end.max <- aggregate(end.peak ~ junction, data=maps.end, FUN=max)  #find a maksimum peak
maps.selected <- merge(maps.end, maps.end.max, by=c("junction","end.peak"), all.y=TRUE) #select only maximum peaks
maps.selected2 <- maps.selected[which(maps.selected$end.peak >= median(maps.selected$end.peak)),] #filter peaks that have less then meadian cDNAs
maps.selected.avg <- aggregate(end ~ junction+end.peak, data=maps.selected2, FUN=mean) #in case of multiple max peaks select average position between them
maps.selected.avg$end <- as.integer(maps.selected.avg$end)  #convert average position to integer
head(maps.selected.avg)
maps.selected.avg$start <- lapply(strsplit(as.character(maps.selected.avg$junction), "\\:"), "[", 2)
head(maps.selected.avg)
maps.selected.avg$junction.end <- lapply(strsplit(as.character(maps.selected.avg$junction), "\\:"), "[", 2)
maps.selected.avg$start.start <- lapply(strsplit(as.character(maps.selected.avg$junction), "\\:"), "[", 2)
head(maps.selected.avg)
maps.selected.avg$junction.end <- lapply(strsplit(as.character(maps.selected.avg$junction), "\\:"), "[", 3)
head(maps.selected.avg)
maps.selected.avg$junction.id <- lapply(strsplit(as.character(maps.selected.avg$junction), "\\:"), "[", 1)
head(maps.selected.avg)
maps.selected.avg$junction.start <- lapply(strsplit(as.character(maps.selected.avg$junction), "\\:"), "[", 2)
final <- maps.selected.avg[c("junction.id","junction.start","junction.end","end.peak")]
final <- maps.selected.avg[c("junction.id","junction.start","junction.end","end.peak")]
head(final)
